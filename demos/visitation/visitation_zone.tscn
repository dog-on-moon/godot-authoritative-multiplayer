[gd_scene load_steps=2 format=3 uid="uid://dkxgxgxhxlxbe"]

[sub_resource type="GDScript" id="GDScript_xsbw1"]
script/source = "extends Button

const STAR = preload(\"res://demos/visitation/star.tscn\")

@onready var initial_text := text

@export var press_count := 0:
	set(x):
		press_count = x
		if is_node_ready():
			text = initial_text % press_count

@onready var mp := MultiplayerRoot.fetch(self)

func _ready() -> void:
	press_count = press_count
	pressed.connect(_request_pressed.rpc)
	
	if mp.is_server():
		var spawn_region := Vector2(get_parent().size.x, position.y) - size
		position = Vector2(spawn_region.x * randf(), spawn_region.y * randf())
		mp.api.set_rpc_server_receive_only(self, &\"_request_pressed\")

@rpc(\"any_peer\")
func _request_pressed():
	press_count += 1
	
	var star := STAR.instantiate()
	star.position = Vector2(get_parent().size.x * randf(), get_parent().size.y * randf())
	star.rotation_degrees = randi_range(0, 360)
	get_parent().add_child(star)
"

[node name="VisitationZone" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
metadata/_r = 0
metadata/_mp = {
NodePath(":modulate"): [0, 2, true, false],
NodePath("Button:press_count"): [0, 2, true, false],
NodePath("Button:position"): [0, 2, true, false]
}

[node name="Button" type="Button" parent="."]
custom_minimum_size = Vector2(128, 48)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -64.0
offset_top = 100.0
offset_right = 64.0
offset_bottom = 148.0
grow_horizontal = 2
grow_vertical = 2
text = "Presses: %s"
script = SubResource("GDScript_xsbw1")
